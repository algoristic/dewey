= Übersicht Vorgehensmodelle
:dewey: Projektmanagement; Vorgehensmodelle
:dewey-template: default.doc.ad

:imagesdir: images

Diese Seite dient lediglich als grobe Übersicht über die verschiedenen Vorgehensmodelle. Eine detailliertere Betrachtung findet sich auf anderen Webseiten.

// siehe: PM_Teil1_PM-Grundlagen_kap2_erg_Info.pdf

== Grundmodelle
Schwerpunkt liegt auf der Projektabwicklung bzw. Produktrealisierung weitestgehend *ohne Projektmanagement*.

=== Wasserfall-Modell
Beschreibung::
* Das Wasserfall-Modell ist ein lineares, _nicht-iteratives Vorgehensmodell_ und orientiert sich damit direkt am klassischen Phasenmodell
* Die Phasenergenisse gehen als Voraussetzung in die nächste Phase ein
* Der _Fokus liegt auf der Produkterstellung_ mit möglichst wenig Management, das Projektmanagement wird folglich nicht direkt berücksichtigt in diesem Modell

Pro::
* klare Abgrenzung der Phasen
* *Qualitätssicherung* durch Phasenergebnisse
* _wenn_ stabile Anforderungen vorliegen, ein sehr effektives Modell

Kontra::
* *Unflexibel* gegenüber Änderungen
* Änderungen im Projektverlauf können sehr teuer werden
* Auftraggeber sieht das fertige Produkt erst am Ende

.Wasserfall-Modell
image::wasserfall-modell_001.png[Wasserfall-Modell, 360, align="center"]

==== Erweitertes Wasserfall-Modell
Das erweiterte Wasserfall-Modell ergänzt das klassische Wasserfall-Modell um den Aspekt der Iterativität, durch mögliche Rücksprünge in die vorherige Phase. Damit schafft es die Grundlage für iterative Vorgehensweisen, ist allerdings in der Praxis immer noch schwer zu handhaben.

=== V-Modell
Beschreibung:: Das V-Modell setzt auf dem Wasserfall-Modell auf und erweitert dieses, indem es für die unterschiedlichen Entwicklungsphasen Teststufen empfiehlt. So stehen dem Grobentwurf, also der Architektur, Systemtests gegenüber, der feineren Struktur Integrationstests, usw.

Pro::
* praxisnähere Weiterenticklung des einfachen Wasserfall-Modells
* Qualitätssteigerung durch Rückkopplung mit Tests

Kontra::
* Nach wie vor zu starr, vor allem im komplexen Umfeld

.V-Modell
image::v-modell_001.png[V-Modell, 420, align="center"]

== Erweiterte Grundmodelle
Schwerpunkt liegt auf der Projektabwicklung bzw. Produktrealisierung mit *mehr oder weniger Projektmanagement*.

=== Spiralmodell
Beschreibung:: Das Spiralmodell ist ein iteratives Modell, bei dem in mehreren Zyklen Prototypen gebaut werden. Jeder Prototyp nährt sich dabei weiter den Anforderungen an und versucht identifizierte Risiken zu beseitigen. Jeder Zyklus besteht aus vier Schritten:
. Definition
    ** Festlegen von Zielen
    ** Erheben von Anforderungen
    ** Identifikation von Alternativen
. Analyse
    ** Evaluieren der möglichen Lösungen
    ** Erkennen von Risiken
    ** Strategien zur Risikovermeidung
. Realisierung und Test
    ** Erstellen eines Prototypen auf Basis des Inputs der vorherigen Phasen
. Planung
    ** Review der Ergebnisse und Schritte
    ** Planung der nächsten Iteration

Pro::
* permanentes Feedback durch Iterationen
* schnelle Fehlererkennung
* Risikoorientierung

Kontra::
* Ein (Management-)Prozessmodell wird nicht für die gesamte Entwicklung festgelegt
    ** das resultiert in einem höheren Managementaufwand
* für kleine und mittlere Projekte aufgrund des Aufwandes weniger geeignet
* Wissen über die Handhabung von Risiken ist nicht immer verfügbar

=== V-Modell XT
Beschreibung:: Das V-Modell XT (e**x**treme **t**ailoring) ist die neuste Revision des urspünglichen V-Modells und ein deutscher Standard. Die Benennung "Extreme Tailoring" (zu deutsch etwa "extreme Maßschneiderung") betont der Aspekt der hohen Anpassbarkeit des Modells auf die verschiedensten Projekttypen, Produktarten und Vorgehensvarianten.

Pro::
* hochgradige Anpassbarkeit
* organisationsneutral

Kontra::
* erfordert einen hohen Grad an Bürokratie
    ** das Modell wurde ursprünglich von der Bundeswehr entwickelt
* schwergewichtig bzw. komplex in der Implementierung (allein die Dokumentation umfasst über 200 Seiten)
* Nutzung funktioniert ausschließlich im deutschsprachigen Raum

== Agile Modelle
Schwerpunkt liegt auf der Projektabwicklung bzw. Produktrealisierung mit *mehr Projektmanagement*.

=== Scrum
Beschreibung:: Scrum ist ein iteratives Vorgehensmodell der Softwareentwicklung, das grundlegende Kernelemente es Vorgehens zur Verfügung stellt, die Ausgestaltung der angewandten Methoden und Prozesse aber dem Team überlässt. Ziel von Scrum ist es Risiken und Störungen des Produktionsablaufes offenzulegen und damit den Produktionsprozess zu optimieren.

Pro::
* wenig Regeln, einfach und verständlich einführbar
* kurze Kommunikationswege und schnelles Feedback
* hohe Transparenz durch regelmäßigen Austausch

Kontra::
* hoher Kommunikations- und Abstimmungsaufwand
* wenig konkrete Handlungsempfehlungen
* hoher Koordinationsaufwand bei größeren Projekten oder Produkten

=== Extreme Programming
Beschreibung:: Extreme Programming (kurz _XP_) ist ein iteratives Vorgehensmodell der Softwareentwicklung. Im Gegensatz zu Scrum gibt XP Methoden für die Entwicklung, Testing, Projekt-Management etc. vor. Ziel von XP ist es Entwicklungs- und Änderungskosten zu minimieren.

Pro::
* inkrementelles Arbeiten in sehr kurzen Zyklen
* gute Adaption an neue Anforderungen
* Endtermin ist fest geplant

Kontra::
* hoher Kommunikations- und Abstimmungsaufwand
* in Reinform nicht gut für große Projekte geeinget

== Projektmanagement-Standards
Schwerpunkt liegt, wie der Name schon sagt, auf der *Projektabwicklung mit Projektmanagement* mit der Prämisse Projektmanagement und Produktionsprozesse zu entkoppeln.

.Übersicht Projektmanagement-Standards
image::uebersicht-pm-standards_001.png[Übersicht Projektmanagement-Standards, 550, align="center"]

=== DIN 69901:2009
Beschreibung:: Die DIN 69901:2009 ist ein kosequent prozessorientiertes Vorgehensmodell für das Projektmanagement. Es defininiert Führungs- Projektmanagement-, Unterstützungs- und Wertschöpfungsprozesse und ordnet diese in einem "Prozesshaus" entlang des Projektlebenszyklus an.

.Prozesshaus DIN 69901
image::din69901_001.png[Prozesshaus DIN 69901, 420, align="center"]

Pro::
* konsequent Prozessorientiert
* konsistenzes Prozessmodell
* individuelle, projektspezifische Anpassung möglich und notwendig

Kontra::
* liefert keine konkreten Handlungsempfehlungen
* auf vollständige Darstellung aller Abhängigkeiten wird (bewusst) verzichtet

.Vorgehensmodell nach DIN 69901:2009
image::din69901_002.png[Vorgehensmodell nach DIN 69901:2009, 550, align="center"]

=== PMI/PMBOK

Beschreibung:: PM/PMBOK ist ein Rahmenwerk und _de facto_ Standard, der 42 Projektmanagementprozesse definiert, die in 5 Prozessgruppen eingruppiert werden:
* *Initiierung*: Prozesse zur formalen Autorisierung des Projektes
* *Planung*: Festlegen des Projektumfangs und konkrete Planung
* *Ausführung*: Sicherstellen, dass die einzelnen Aktivitäten durchgeführt werden, wie sie geplant wurden
* *Überwachung und Steuerung*: Informationen zur Projektperformance sammeln und bewerten
* *Abschluss*: Vertragsbeendigung und Projektabschluss

Pro::
* Reflektiert gängige Vorgehensweisen aus der Praxis
* Proessorientierung und -gruppierung sorgt für gute Nachvollziehbarkeit

Kontra::
* zu komplex für kleinere Projekte
* soziale Aspekte, wie Führung und Kommunikation werden im Guide vernachlässigt behandelt

=== PRINCE2
Beschreibung:: **PR**ojects **IN** **C**ontrolled **E**nviroments **2** bildet einen strukturierten Rahmen um das eweilige Projekt und gibt den Mitgliedern des Projektmanagements anhand seines Prozessmodells konkrete Handlungsempfehlungen für jede Phase. PRINCE2 definiert Rollen und Verantwortlichkeiten und das Prinzip der "Management by Exception"footnote:["Management by Exception" oder auch "Ausnahmeprinzip" bedeutet, dass eine Führungskraft solange die volle Entscheidungsgewalt hat, bis etwas unvorhergesehenes eintritt oder allgemein etwas, das ihren Handlungsspielraum überschreitet. Dieses Ereignis wird dann zur nächsthöheren Führungsebene hocheskaliert.]. Außerdem steht im Kern das Prinzip der fortlaufenden geschäftlichen Rechtfertigung.

Pro::
* starke Orientierung am wirtschaftlichen Nutzen
* ergebnis- bzw. produktbasierte Planung
* gibt genaue Handlungsempfehlungen
* definiertes Prozess-, Rollen- und Problemmanagement

Kontra::
* Projektbürokrtie durch Fokus auf Dokumente
* für kleinere Projekte zu schwergewichtig
* keine Anforderungsanalyse bedacht
* keine sozialen Komponenten (wie Führung oder Kommunikation)
